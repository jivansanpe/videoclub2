package com.ivancito.videoclub.controllers;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.ivancito.videoclub.entity.models.Videoclub;
import com.ivancito.videoclub.entity.services.IVideoclubService;
import com.ivancito.videoclub.entity.services.VideoclubServiceImpl;

@RestController
public class VideoclubController {
	
	@Autowired
	IVideoclubService videoclubService;
	
	@GetMapping("/videoclub")
	public List<Videoclub> getAllVideoclub() {
		return videoclubService.getAll();
	}
	
	@GetMapping("/videoclub/{id}")
	public Videoclub getOne(@PathVariable(value = "id") long id) {
		return videoclubService.get(id);
	}
	
	@PostMapping("/videoclub")
	public void post(@RequestBody Videoclub videoclub) {
		videoclubService.post(videoclub);
	}
	
	@PutMapping("/videoclub/{id}")
	public void put(@RequestBody Videoclub videoclub, @PathVariable(value = "id") long id) {
		videoclubService.put(videoclub, id);
	}
	
	@DeleteMapping("/videoclub/{id}")
	public ResponseEntity<?> delete(@PathVariable(value = "id") long id) {
		
		Map<String, Object> response = new HashMap<>();
		
		try {
			
			videoclubService.delete(id);
			response.put("Mensaje", "Se eliminó la película con id " + id + " con éxito.");
			
		} catch (DataAccessException e) {
			
			response.put("Mensaje", "Ocurrió un error al eliminar la película con id " + id + ".");
			response.put("Error", e.getMostSpecificCause().getMessage());
			return new ResponseEntity<Map<String, Object>>(response, HttpStatus.INTERNAL_SERVER_ERROR);
			
		}
		
		return new ResponseEntity<Map<String, Object>>(response, HttpStatus.OK);
		
	}
	
}
